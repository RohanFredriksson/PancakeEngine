#pragma once

namespace {

const char* DEBUG_FRAGMENT = 
"#version 330 core                                                    \n"
"                                                                     \n"
"in vec3 fColour;                                                     \n"
"out vec4 colour;                                                     \n"
"                                                                     \n"
"void main()                                                          \n" 
"{                                                                    \n"
"    colour = vec4(fColour, 1);                                       \n"
"}                                                                    \n";

const char* DEBUG_VERTEX = 
"#version 330 core                                                    \n"
"                                                                     \n"
"layout (location = 0) in vec3 aPos;                                  \n"
"layout (location = 1) in vec3 aColour;                               \n"
"                                                                     \n"
"out vec3 fColour;                                                    \n"
"                                                                     \n"
"uniform mat4 uView;                                                  \n"
"uniform mat4 uProjection;                                            \n"
"                                                                     \n"
"void main()                                                          \n"
"{                                                                    \n"
"    fColour = aColour;                                               \n"
"    gl_Position = uProjection * uView * vec4(aPos, 1.0);             \n"
"}                                                                    \n";

const char* DEFAULT_FRAGMENT = 
"#version 330 core                                                    \n"
"                                                                     \n"
"in vec4 fColour;                                                     \n"
"in vec2 fTexCoords;                                                  \n"
"in float fTexId;                                                     \n"
"in float fEntityId;                                                  \n"
"                                                                     \n"
"uniform sampler2D uTextures[8];                                      \n"
"                                                                     \n"
"out vec4 colour;                                                     \n"
"                                                                     \n"
"void main()                                                          \n"
"{                                                                    \n"
"    switch (int(fTexId)) {                                           \n"
"        case 0:                                                      \n"
"            colour = fColour;                                        \n"
"            break;                                                   \n"
"        case 1:                                                      \n"
"            colour = fColour * texture(uTextures[1], fTexCoords);    \n"
"            break;                                                   \n"
"        case 2:                                                      \n"
"            colour = fColour * texture(uTextures[2], fTexCoords);    \n"
"            break;                                                   \n"
"        case 3:                                                      \n"
"            colour = fColour * texture(uTextures[3], fTexCoords);    \n"
"            break;                                                   \n"
"        case 4:                                                      \n"
"            colour = fColour * texture(uTextures[4], fTexCoords);    \n"
"            break;                                                   \n"
"        case 5:                                                      \n"
"            colour = fColour * texture(uTextures[5], fTexCoords);    \n"
"            break;                                                   \n"
"        case 6:                                                      \n"
"            colour = fColour * texture(uTextures[6], fTexCoords);    \n"
"            break;                                                   \n"
"        case 7:                                                      \n"
"            colour = fColour * texture(uTextures[7], fTexCoords);    \n"
"            break;                                                   \n"
"    }                                                                \n"
"}                                                                    \n";

const char* DEFAULT_VERTEX = 
"#version 330 core                                                    \n"
"layout (location=0) in vec3 aPos;                                    \n"
"layout (location=1) in vec4 aColour;                                 \n"
"layout (location=2) in vec2 aTexCoords;                              \n"
"layout (location=3) in float aTexId;                                 \n"
"layout (location=4) in float aEntityId;                              \n"
"                                                                     \n"
"uniform mat4 uProjection;                                            \n"
"uniform mat4 uView;                                                  \n"
"                                                                     \n"
"out vec4 fColour;                                                    \n"
"out vec2 fTexCoords;                                                 \n"
"out float fTexId;                                                    \n"
"out float fEntityId;                                                 \n"
"                                                                     \n"
"void main()                                                          \n"
"{                                                                    \n"
"    fColour = aColour;                                               \n"
"    fTexCoords = aTexCoords;                                         \n"
"    fTexId = aTexId;                                                 \n"
"    fEntityId = aEntityId;                                           \n"
"    gl_Position = uProjection * uView * vec4(aPos, 1.0);             \n"
"}                                                                    \n";

const char* ENTITY_FRAGMENT = 
"#version 330 core                                                    \n"
"                                                                     \n"
"in vec4 fColour;                                                     \n"
"in vec2 fTexCoords;                                                  \n"
"in float fTexId;                                                     \n"
"in float fEntityId;                                                  \n"
"                                                                     \n"
"uniform sampler2D uTextures[8];                                      \n"
"                                                                     \n"
"out vec3 colour;                                                     \n"
"                                                                     \n"
"void main()                                                          \n"
"{                                                                    \n"
"    vec4 texColour = vec4(1, 1, 1, 1);                               \n"
"    switch (int(fTexId)) {                                           \n"
"        case 1:                                                      \n"
"            texColour = fColour * texture(uTextures[1], fTexCoords); \n"
"            break;                                                   \n"
"        case 2:                                                      \n"
"            texColour = fColour * texture(uTextures[2], fTexCoords); \n"
"            break;                                                   \n"
"        case 3:                                                      \n"
"            texColour = fColour * texture(uTextures[3], fTexCoords); \n"
"            break;                                                   \n"
"        case 4:                                                      \n"
"            texColour = fColour * texture(uTextures[4], fTexCoords); \n"
"            break;                                                   \n"
"        case 5:                                                      \n"
"            texColour = fColour * texture(uTextures[5], fTexCoords); \n"
"            break;                                                   \n"
"        case 6:                                                      \n"
"            texColour = fColour * texture(uTextures[6], fTexCoords); \n"
"            break;                                                   \n"
"        case 7:                                                      \n"
"            texColour = fColour * texture(uTextures[7], fTexCoords); \n"
"            break;                                                   \n"
"    }                                                                \n"
"                                                                     \n"
"    if (texColour.a < 0.5) {                                         \n"
"        discard;                                                     \n"
"    }                                                                \n"
"                                                                     \n"
"    colour = vec3(fEntityId + 1, 0, 0);                              \n"
"}                                                                    \n";

}